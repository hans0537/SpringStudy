server:
  #  0번 포트를 할당하면 자동으로 포트번호가 할당된다
    port: 0
  # 만약 포트 번호를 eureka에 보여주려면 아래와 같이 랜덤 함수를 사용후
#  port: ${random.int(50000,51000)}

spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
  jpa:
    show-sql: true
    defer-datasource-initialization: true
  application:
    name: user-service
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console

eureka:
  instance:
    # eureka 에 등록된 서비스 명을 보여주려면
#     instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.port}}
#    instance-id: ${spring.application.name}:${server.port}
     instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    # eureka 에 해당 서비스 등록
    register-with-eureka: true
    # eureka 서버로부터 인스턴들의 정보를 주기적으로 정보를 가져오도록 설정
    fetch-registry: true
    # 등록할 eureka 서버의 위치
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: Welcome to the simple E-commerce.
  
logging:
  level:
    com.example.userservice: DEBUG

# configure 서버에 있는 파일이 변경 될때 마다 재부팅 안하고 actuator를 사용하여 최신화
management:
  endpoints:
    web:
      exposure:
        # refresh : MSA에 있는 configuration 서버에서 가지고 와야할 정보를 refresh
        include: refresh, health, beans

#token:
#  # 만료 기간
#  expiration_time: 86400000
#  # 어떤 키를 가지고 생성할지
#  secret: user_token
