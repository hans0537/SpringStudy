server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
#      default-filters에 GlobalFilter 정보들을 등록하면 모든 곳에 필터 적용
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring CloudGateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          # 로드밸런싱으로 등록 (eureka application 이름으로 등록)
#          uri: lb://USER-SERVICE
#          # 조건을 부여
#          predicates:
#            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        # 위 로그인과 회원가입 경로는 인증절차를 안받는다. 나머지 경로는 JWT 토큰 받게 함
        # 만약 다른 경로도 JWT가 필요 없다면 위로 따로 뺀다
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: catalog-service
          # 로드밸런싱으로 등록 (eureka application 이름으로 등록)
          uri: lb://CATALOG-SERVICE
          # 조건을 부여
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          # 로드밸런싱으로 등록 (eureka application 이름으로 등록)
          uri: lb://ORDER-SERVICE
          # 조건을 부여
          predicates:
            - Path=/order-service/**
        - id: first-service
#          로드밸런싱으로 등록 (eureka application 이름으로 등록)
          uri: lb://MY-FIRST-SERVICE
          # 조건을 부여
          predicates:
            - Path=/fist-service/**
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          # 조건을 부여
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
#            필터를 여러개 넣을려면 name을 부여
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there
                preLogger: true
                postLogger: true

token:
  # 어떤 키를 가지고 생성할지
  secret: user_token